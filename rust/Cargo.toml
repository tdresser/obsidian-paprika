[package]
name = "rust"
version = "0.1.0"
authors = ["Tim <tdresser@gmail.com>"]
edition = "2018"

[[bin]]
name = "main"
path = "src/main.rs"

[[bin]]
name = "local"
path = "src/local.rs"

[lib]
name = "paprika_markdown"
path = "src/lib/lib.rs"
crate-type = ["cdylib"]
# crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
reqwest = "0.11.8"
wasm-bindgen = {version = "0.2.63", features = ["serde-serialize"]}
paprika-api = "1.0.0"
serde = { version = "1.0", features = ["derive"] }
futures = "0.3.19"
handlebars = "4.1.6"
serde_json = "1.0.73"
wasm-bindgen-futures = "0.4.28"
web-sys = "0.3.55"
js-sys = "0.3.55"

# TODO, maybe won't need this once we drop tokio?
getrandom = {version = "0.2.3", features = ["js"]}

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
